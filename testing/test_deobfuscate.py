import sys
import pytest
from deobfuscate import deobfuscate


@pytest.mark.parametrize(('input', 'expected'), (
    ('1;2', ['1;', '2']),
    ('1', ['1']),
    (';1', [';', '1']),
    ('1;2;3', ['1;', '2;', '3']),
    ('1;2;3;', ['1;', '2;', '3;']),
    ([], None),
    (['1'], ['1']),
    ([['1;2'], '3'], ['1;', '2', '3']),
    ([['1;2;'], '3;'], ['1;', '2;', '3;']),
    ([['1;2;', ['1', '2', '3']], '3;'], ['1;', '2;', '1', '2', '3', '3;']),
    ([[[]], [],[[[]]],[]], []),
    (';;;', [';', ';', ';']),
    ([';'], [';']),
    ))
def test_recur_split(input, expected):
    assert deobfuscate.recur_split(input, ';') == expected


@pytest.mark.parametrize(('input', 'expected'), (
    (';1', [';', '1']),
    ('1,2;3', ['1,2;', '3']),
    ('1;2;3', ['1;', '2;', '3']),
    ('1;2;3;', ['1;', '2;', '3;']),
    (['1'], ['1']),
    (['1;'], ['1;']),
    (';;;', [';', ';', ';']),
    ([';'], [';']),
    ([], None),
    ('1;', ['1;']),
    (['1;2', ['1;2;3']], ['1;', '2', '1;', '2;', '3']),
    ([['1;2;'], '3;'], ['1;', '2;', '3;']),
    ([['1;2;', ['1', '2', '3']], '3;'], ['1;', '2;', '1', '2', '3', '3;']),
    ))
def test_generate_linebreaks_no_delim(input, expected):
    assert deobfuscate.generate_linebreaks(input) == expected


@pytest.mark.parametrize(('input', 'delims', 'expected'), (
    ('1,2;3', [';', ','], ['1,', '2;', '3']),
    (['1'], [';', ','], ['1']),
    ([], [';', ','], None),
    ([';1,2;3,'], [';', ','], [';', '1,', '2;', '3,']),
    (['2;3,1,2;3,'], [';', ','], ['2;', '3,', '1,', '2;', '3,']),
    ([['2;3,1,2;3,'], ',1;2,'], [';', ','], ['2;', '3,', '1,', '2;', '3,', ',', '1;', '2,']),
    (';,;,;,', [';', ','], [';', ',', ';', ',', ';', ',']),
    ([[';,'], ';', [',', [';,']]], [';', ','], [';', ',', ';', ',', ';', ',']),
    ))
def test_generate_linebreaks_delims(input, delims, expected):
    assert deobfuscate.generate_linebreaks(input, *delims) == expected
